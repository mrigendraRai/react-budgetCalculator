{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Desktop/budget-calculator/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList';\nimport ExpenseForm from './components/ExpenseForm';\nimport Alert from './components/Alert';\nimport uuid from 'uuid/v4';\nconst initialExpenses = [{\n  id: uuid(),\n  charge: \"rent\",\n  amount: 1600\n}, {\n  id: uuid(),\n  charge: \"car payment\",\n  amount: 400\n}, {\n  id: uuid(),\n  charge: \"credit card bill\",\n  amount: 1200\n}]; //import useState(), function returns [] with two values\n//the actual value of the state and function for update/control , default value\n\nfunction App() {\n  //******* State Values ********\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses); // Single Expense\n\n  const [charge, setCharge] = useState(''); // Single Amount\n\n  const [amount, setAmount] = useState(''); // Alert\n\n  const [alert, setAlert] = useState({\n    show: false\n  }); // edit\n\n  const [edit, setEdit] = useState(false); // Edit Item\n\n  const [id, setId] = useState(0); //******* Functionality ********\n  // handle charge\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  }; // handle ampount\n\n\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  }; // handle Alert\n\n\n  const handleAlert = ({\n    type,\n    text\n  }) => {\n    setAlert({\n      show: true,\n      type,\n      text\n    });\n    setTimeout(() => {\n      setAlert({\n        show: false\n      });\n    }, 3000);\n  }; // handle Submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge != '' && amount > 0) {\n      const singleExpense = {\n        id: uuid(),\n        charge,\n        amount\n      };\n      setExpenses([...expenses, singleExpense]);\n      setCharge('');\n      setAmount('');\n      handleAlert({\n        type: 'success',\n        text: 'item added'\n      });\n    } else {\n      // handle alert called\n      handleAlert({\n        type: 'danger',\n        text: `charge can't be empty value has to be bigger than zero`\n      });\n    }\n  }; // handle clear all items\n\n\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({\n      type: \"danger\",\n      text: \"All items  Deleted\"\n    });\n  }; //handle Delete \n\n\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id != id);\n    setExpenses(tempExpenses);\n    handleAlert({\n      type: \"danger\",\n      text: \"item Deleted\"\n    });\n  }; //handle Edit \n\n\n  const handleEdit = id => {\n    console.log(`item edited : ${id}`);\n  };\n\n  return React.createElement(React.Fragment, null, alert.show && React.createElement(Alert, {\n    type: alert.type,\n    text: alert.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"budget calculator\"), React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ExpenseForm, {\n    charge: charge,\n    amount: amount,\n    handleCharge: handleCharge,\n    handleAmount: handleAmount,\n    handleSubmit: handleSubmit,\n    edit: edit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDelete: handleDelete,\n    handleEdit: handleEdit,\n    clearItems: clearItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"total spending: \", \" \", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"$ \", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nineleaps/Desktop/budget-calculator/src/App.js"],"names":["React","useState","ExpenseList","ExpenseForm","Alert","uuid","initialExpenses","id","charge","amount","App","expenses","setExpenses","setCharge","setAmount","alert","setAlert","show","edit","setEdit","setId","handleCharge","e","target","value","handleAmount","handleAlert","type","text","setTimeout","handleSubmit","preventDefault","singleExpense","clearItems","handleDelete","tempExpenses","filter","item","handleEdit","console","log","reduce","acc","curr","parseInt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,MAAM,EAAE,MAAtB;AAA8BC,EAAAA,MAAM,EAAE;AAAtC,CADsB,EAEtB;AAAEF,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,MAAM,EAAE,aAAtB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAFsB,EAGtB;AAAEF,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,MAAM,EAAE,kBAAtB;AAA0CC,EAAAA,MAAM,EAAE;AAAlD,CAHsB,CAAxB,C,CAKA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACK,eAAD,CAAxC,CAHa,CAIb;;AACA,QAAM,CAACE,MAAD,EAASK,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC,CALa,CAMb;;AACA,QAAM,CAACQ,MAAD,EAASK,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC,CAPa,CAQb;;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC,CATa,CAUb;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC,CAXa,CAab;;AACA,QAAM,CAACM,EAAD,EAAKa,KAAL,IAAcnB,QAAQ,CAAC,CAAD,CAA5B,CAda,CAiBb;AACA;;AACA,QAAMoB,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CAnBa,CAuBb;;;AACA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBR,IAAAA,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CAxBa,CA2Bb;;;AACA,QAAME,WAAW,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAoB;AACtCZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcU,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,KAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD,CA5Ba,CAkCb;;;AACA,QAAMa,YAAY,GAAGR,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACS,cAAF;;AACA,QAAIvB,MAAM,IAAI,EAAV,IAAgBC,MAAM,GAAG,CAA7B,EAAgC;AAC9B,YAAMuB,aAAa,GAAG;AAAEzB,QAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,OAAtB;AACAG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcqB,aAAd,CAAD,CAAX;AACAnB,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAY,MAAAA,WAAW,CAAC;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAAD,CAAX;AACD,KAND,MAMO;AACL;AACAF,MAAAA,WAAW,CAAC;AACVC,QAAAA,IAAI,EAAE,QADI;AAEVC,QAAAA,IAAI,EAAG;AAFG,OAAD,CAAX;AAID;AACF,GAfD,CAnCa,CAoDb;;;AACA,QAAMK,UAAU,GAAG,MAAM;AACvBrB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAc,IAAAA,WAAW,CAAC;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,IAAI,EAAC;AAArB,KAAD,CAAX;AACD,GAHD,CArDa,CA0Db;;;AACA,QAAMM,YAAY,GAAI3B,EAAD,IAAQ;AAC3B,QAAI4B,YAAY,GAAGxB,QAAQ,CAACyB,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAAC9B,EAAL,IAAWA,EAAnC,CAAnB;AACAK,IAAAA,WAAW,CAACuB,YAAD,CAAX;AACAT,IAAAA,WAAW,CAAC;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,IAAI,EAAC;AAArB,KAAD,CAAX;AACD,GAJD,CA3Da,CAiEb;;;AACA,QAAMU,UAAU,GAAI/B,EAAD,IAAQ;AACzBgC,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBjC,EAAG,EAAhC;AACD,GAFD;;AAKA,SACE,0CACGQ,KAAK,CAACE,IAAN,IAAc,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,KAAK,CAACY,IAAnB;AAAyB,IAAA,IAAI,EAAEZ,KAAK,CAACa,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEpB,MADV;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,YAAY,EAAEY,YAHhB;AAIE,IAAA,YAAY,EAAEI,YAJhB;AAKE,IAAA,YAAY,EAAEK,YALhB;AAME,IAAA,IAAI,EAAEZ,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,YAAY,EAAEuB,YAFhB;AAGE,IAAA,UAAU,EAAEI,UAHd;AAIE,IAAA,UAAU,EAAEL,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmB,GADnB,EAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKtB,QAAQ,CAAC8B,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChC,WAAQD,GAAG,IAAIE,QAAQ,CAACD,IAAI,CAAClC,MAAN,CAAvB;AACD,GAFE,EAEA,CAFA,CADL,CAFF,CAlBF,CADF;AA6BD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList';\nimport ExpenseForm from './components/ExpenseForm';\nimport Alert from './components/Alert';\nimport uuid from 'uuid/v4';\n\nconst initialExpenses = [\n  { id: uuid(), charge: \"rent\", amount: 1600 },\n  { id: uuid(), charge: \"car payment\", amount: 400 },\n  { id: uuid(), charge: \"credit card bill\", amount: 1200 }\n];\n//import useState(), function returns [] with two values\n//the actual value of the state and function for update/control , default value\n\nfunction App() {\n  //******* State Values ********\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses);\n  // Single Expense\n  const [charge, setCharge] = useState('');\n  // Single Amount\n  const [amount, setAmount] = useState('');\n  // Alert\n  const [alert, setAlert] = useState({ show: false });\n  // edit\n  const [edit, setEdit] = useState(false);\n\n  // Edit Item\n  const [id, setId] = useState(0);\n\n\n  //******* Functionality ********\n  // handle charge\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  // handle ampount\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  };\n  // handle Alert\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false })\n    }, 3000)\n  }\n  // handle Submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge != '' && amount > 0) {\n      const singleExpense = { id: uuid(), charge, amount };\n      setExpenses([...expenses, singleExpense]);\n      setCharge('');\n      setAmount('');\n      handleAlert({ type: 'success', text: 'item added' });\n    } else {\n      // handle alert called\n      handleAlert({\n        type: 'danger',\n        text: `charge can't be empty value has to be bigger than zero`\n      });\n    }\n  };\n\n  // handle clear all items\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({type:\"danger\", text:\"All items  Deleted\"});\n  };\n\n  //handle Delete \n  const handleDelete = (id) => {\n    let tempExpenses = expenses.filter(item => item.id != id);\n    setExpenses(tempExpenses);\n    handleAlert({type:\"danger\", text:\"item Deleted\"});\n  }\n\n  //handle Edit \n  const handleEdit = (id) => {\n    console.log(`item edited : ${id}`);\n  }\n\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <Alert />\n      <h1>budget calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm \n          charge={charge} \n          amount={amount} \n          handleCharge={handleCharge}\n          handleAmount={handleAmount} \n          handleSubmit={handleSubmit}\n          edit={edit} />\n        <ExpenseList \n          expenses={expenses} \n          handleDelete={handleDelete} \n          handleEdit={handleEdit} \n          clearItems={clearItems} />\n      </main>\n      <h1>\n        total spending: {\" \"}\n        <span className=\"total\">\n          $ {expenses.reduce((acc, curr) => {\n            return (acc += parseInt(curr.amount));\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}