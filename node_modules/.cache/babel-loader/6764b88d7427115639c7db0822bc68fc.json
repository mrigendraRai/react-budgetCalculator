{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Desktop/react-budgetCalculator/src/components/LandingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport ExpenseList from './ExpenseList';\nimport ExpenseForm from './ExpenseForm';\nimport Alert from './Alert';\nimport uuid from 'uuid/v4';\nconst initialExpenses = localStorage.getItem('expenses') ? JSON.parse(localStorage.getItem(\"expenses\")) : [];\n\nfunction LandingPage() {\n  //******* State Values ********\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses); // Single Expense\n\n  const [charge, setCharge] = useState(''); // Single Amount\n\n  const [amount, setAmount] = useState(''); // Alert\n\n  const [alert, setAlert] = useState({\n    show: false\n  }); // edit\n\n  const [edit, setEdit] = useState(false); // Edit Item\n\n  const [id, setId] = useState(0); //******** useEffect ***********\n\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n  }); //******* Functionality ********\n  // handle charge\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  }; // handle ampount\n\n\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  }; // handle Alert\n\n\n  const handleAlert = ({\n    type,\n    text\n  }) => {\n    setAlert({\n      show: true,\n      type,\n      text\n    });\n    setTimeout(() => {\n      setAlert({\n        show: false\n      });\n    }, 3000);\n  }; // handle Submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge != '' && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? { ...item,\n            charge,\n            amount\n          } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n        handleAlert({\n          type: 'success',\n          text: 'item Edited'\n        });\n      } else {\n        const singleExpense = {\n          id: uuid(),\n          charge,\n          amount\n        };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({\n          type: 'success',\n          text: 'item added'\n        });\n      }\n\n      setCharge('');\n      setAmount('');\n    } else {\n      // handle alert called\n      handleAlert({\n        type: 'danger',\n        text: `charge can't be empty value has to be bigger than zero`\n      });\n    }\n  }; // handle clear all items\n\n\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({\n      type: \"danger\",\n      text: \"All items  Deleted\"\n    });\n  }; //handle Delete \n\n\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id != id);\n    setExpenses(tempExpenses);\n    handleAlert({\n      type: \"danger\",\n      text: \"item Deleted\"\n    });\n  }; //handle Edit \n\n\n  const handleEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let {\n      charge,\n      amount\n    } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  return React.createElement(React.Fragment, null, alert.show && React.createElement(Alert, {\n    type: alert.type,\n    text: alert.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"budget calculator\"), React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ExpenseForm, {\n    charge: charge,\n    amount: amount,\n    handleCharge: handleCharge,\n    handleAmount: handleAmount,\n    handleSubmit: handleSubmit,\n    edit: edit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDelete: handleDelete,\n    handleEdit: handleEdit,\n    clearItems: clearItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"total spending: \", \" \", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"$ \", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/home/nineleaps/Desktop/react-budgetCalculator/src/components/LandingPage.js"],"names":["React","useState","useEffect","ExpenseList","ExpenseForm","Alert","uuid","initialExpenses","localStorage","getItem","JSON","parse","LandingPage","expenses","setExpenses","charge","setCharge","amount","setAmount","alert","setAlert","show","edit","setEdit","id","setId","setItem","stringify","handleCharge","e","target","value","handleAmount","handleAlert","type","text","setTimeout","handleSubmit","preventDefault","tempExpenses","map","item","singleExpense","clearItems","handleDelete","filter","handleEdit","expense","find","reduce","acc","curr","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport ExpenseList from './ExpenseList';\nimport ExpenseForm from './ExpenseForm';\nimport Alert from './Alert';\nimport uuid from 'uuid/v4';\n\nconst initialExpenses = localStorage.getItem('expenses') ? \nJSON.parse(localStorage.getItem(\"expenses\")) : [];\n\n\nfunction LandingPage() {\n  //******* State Values ********\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses);\n  // Single Expense\n  const [charge, setCharge] = useState('');\n  // Single Amount\n  const [amount, setAmount] = useState('');\n  // Alert\n  const [alert, setAlert] = useState({ show: false });\n  // edit\n  const [edit, setEdit] = useState(false);\n\n  // Edit Item\n  const [id, setId] = useState(0);\n\n  //******** useEffect ***********\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses)\n    );\n  });\n\n  //******* Functionality ********\n  // handle charge\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  // handle ampount\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  };\n  // handle Alert\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false })\n    }, 3000)\n  }\n\n  // handle Submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge != '' && amount > 0) {\n      if(edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? {...item, charge, amount} : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n        handleAlert({ type: 'success', text: 'item Edited' });\n      }else {\n        const singleExpense = { id: uuid(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({ type: 'success', text: 'item added' });\n      }\n      \n      setCharge('');\n      setAmount('');\n      \n    } else {\n      // handle alert called\n      handleAlert({\n        type: 'danger',\n        text: `charge can't be empty value has to be bigger than zero`\n      });\n    }\n  };\n\n  // handle clear all items\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({type:\"danger\", text:\"All items  Deleted\"});\n  };\n\n  //handle Delete \n  const handleDelete = (id) => {\n    let tempExpenses = expenses.filter(item => item.id != id);\n    setExpenses(tempExpenses);\n    handleAlert({type:\"danger\", text:\"item Deleted\"});\n  }\n\n  //handle Edit \n  const handleEdit = (id) => {\n    let expense = expenses.find(item => item.id ===id);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  }\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <Alert />\n      <h1>budget calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm \n          charge={charge} \n          amount={amount} \n          handleCharge={handleCharge}\n          handleAmount={handleAmount} \n          handleSubmit={handleSubmit}\n          edit={edit} />\n        <ExpenseList \n          expenses={expenses} \n          handleDelete={handleDelete} \n          handleEdit={handleEdit} \n          clearItems={clearItems} />\n      </main>\n      <h1>\n        total spending: {\" \"}\n        <span className=\"total\">\n          $ {expenses.reduce((acc, curr) => {\n            return (acc += parseInt(curr.amount));\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}